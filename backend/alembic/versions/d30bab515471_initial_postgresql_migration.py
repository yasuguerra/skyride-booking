"""Initial PostgreSQL migration

Revision ID: d30bab515471
Revises: 
Create Date: 2025-08-27 02:24:00.303307

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd30bab515471'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('legal_id', sa.String(length=50), nullable=True),
    sa.Column('legal_id_type', sa.String(length=10), nullable=True),
    sa.Column('address_line_1', sa.String(length=255), nullable=True),
    sa.Column('address_line_2', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('region', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=2), nullable=True),
    sa.Column('postal_code', sa.String(length=10), nullable=True),
    sa.Column('preferred_language', sa.String(length=5), nullable=True),
    sa.Column('marketing_opt_in', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_customers_email'), 'customers', ['email'], unique=True)
    op.create_table('operators',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('website', sa.String(length=500), nullable=True),
    sa.Column('logo', sa.String(length=500), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('distribution_opt_in', sa.Boolean(), nullable=False),
    sa.Column('price_floor', sa.Float(), nullable=True),
    sa.Column('empty_leg_window', sa.Integer(), nullable=True),
    sa.Column('acceptance_rate', sa.Float(), nullable=False),
    sa.Column('avg_response_time', sa.Integer(), nullable=False),
    sa.Column('cancellation_rate', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_operators_active_code', 'operators', ['active', 'code'], unique=False)
    op.create_index(op.f('ix_operators_code'), 'operators', ['code'], unique=True)
    op.create_table('policies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_policies_type_active', 'policies', ['type', 'active'], unique=False)
    op.create_index(op.f('ix_policies_type'), 'policies', ['type'], unique=False)
    op.create_table('price_books',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('effective_from', sa.DateTime(timezone=True), nullable=False),
    sa.Column('effective_to', sa.DateTime(timezone=True), nullable=True),
    sa.Column('base_currency', sa.String(length=3), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('routes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('origin', sa.String(length=255), nullable=False),
    sa.Column('destination', sa.String(length=255), nullable=False),
    sa.Column('distance', sa.Float(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_routes_origin_destination', 'routes', ['origin', 'destination'], unique=False)
    op.create_index(op.f('ix_routes_destination'), 'routes', ['destination'], unique=False)
    op.create_index(op.f('ix_routes_origin'), 'routes', ['origin'], unique=False)
    op.create_table('aircraft',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('operator_id', sa.UUID(), nullable=False),
    sa.Column('model', sa.String(length=255), nullable=False),
    sa.Column('registration', sa.String(length=50), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('hourly_rate', sa.Float(), nullable=True),
    sa.Column('images', postgresql.ARRAY(String()), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('ics_url', sa.String(length=500), nullable=True),
    sa.Column('ics_last_sync', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['operator_id'], ['operators.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_aircraft_operator_active', 'aircraft', ['operator_id', 'active'], unique=False)
    op.create_index(op.f('ix_aircraft_registration'), 'aircraft', ['registration'], unique=True)
    op.create_table('message_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('customer_id', sa.UUID(), nullable=True),
    sa.Column('channel', sa.Enum('WHATSAPP', 'EMAIL', 'SMS', 'SYSTEM', name='messagechannel'), nullable=False),
    sa.Column('direction', sa.Enum('INBOUND', 'OUTBOUND', name='messagedirection'), nullable=False),
    sa.Column('template', sa.String(length=100), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('wa_id', sa.String(length=100), nullable=True),
    sa.Column('message_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('SENT', 'DELIVERED', 'READ', 'FAILED', 'PENDING', name='messagestatus'), nullable=False),
    sa.Column('quote_id', sa.UUID(), nullable=True),
    sa.Column('booking_id', sa.UUID(), nullable=True),
    sa.Column('message_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_messages_channel_direction', 'message_logs', ['channel', 'direction'], unique=False)
    op.create_index('idx_messages_status_date', 'message_logs', ['status', 'created_at'], unique=False)
    op.create_index(op.f('ix_message_logs_message_id'), 'message_logs', ['message_id'], unique=False)
    op.create_table('surcharges',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('price_book_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('aircraft_type', sa.String(length=100), nullable=True),
    sa.Column('route_pattern', sa.String(length=255), nullable=True),
    sa.Column('min_passengers', sa.Integer(), nullable=True),
    sa.Column('max_passengers', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['price_book_id'], ['price_books.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('availability_slots',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('aircraft_id', sa.UUID(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.Enum('AVAILABLE', 'BUSY', 'MAINTENANCE', name='slotstatus'), nullable=False),
    sa.Column('source', sa.Enum('PORTAL', 'ICS', 'GOOGLE', name='slotsource'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['aircraft_id'], ['aircraft.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_slots_aircraft_time', 'availability_slots', ['aircraft_id', 'start_time', 'end_time'], unique=False)
    op.create_index('idx_slots_status_source', 'availability_slots', ['status', 'source'], unique=False)
    op.create_table('busy_blocks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('aircraft_id', sa.UUID(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('source', sa.Enum('PORTAL', 'ICS', 'GOOGLE', name='slotsource'), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['aircraft_id'], ['aircraft.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_busy_blocks_aircraft_time', 'busy_blocks', ['aircraft_id', 'start_time', 'end_time'], unique=False)
    op.create_index('idx_busy_blocks_external_id', 'busy_blocks', ['external_id'], unique=False)
    op.create_table('listings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('operator_id', sa.UUID(), nullable=False),
    sa.Column('aircraft_id', sa.UUID(), nullable=False),
    sa.Column('route_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.Enum('CHARTER', 'EMPTY_LEG', 'SEAT', name='listingtype'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SOLD_OUT', 'EXPIRED', name='listingstatus'), nullable=False),
    sa.Column('base_price', sa.Float(), nullable=False),
    sa.Column('service_fee', sa.Float(), nullable=False),
    sa.Column('price_per_seat', sa.Float(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('available_from', sa.DateTime(timezone=True), nullable=True),
    sa.Column('available_to', sa.DateTime(timezone=True), nullable=True),
    sa.Column('max_passengers', sa.Integer(), nullable=False),
    sa.Column('available_seats', sa.Integer(), nullable=True),
    sa.Column('confirmation_sla', sa.Integer(), nullable=True),
    sa.Column('flexible_window', sa.Integer(), nullable=True),
    sa.Column('departure_window', sa.DateTime(timezone=True), nullable=True),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('amenities', postgresql.ARRAY(String()), nullable=True),
    sa.Column('images', postgresql.ARRAY(String()), nullable=True),
    sa.Column('featured', sa.Boolean(), nullable=False),
    sa.Column('boosted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['aircraft_id'], ['aircraft.id'], ),
    sa.ForeignKeyConstraint(['operator_id'], ['operators.id'], ),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_listings_featured_boosted', 'listings', ['featured', 'boosted'], unique=False)
    op.create_index('idx_listings_status_type', 'listings', ['status', 'type'], unique=False)
    op.create_table('price_overrides',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('price_book_id', sa.UUID(), nullable=False),
    sa.Column('aircraft_id', sa.UUID(), nullable=True),
    sa.Column('route_id', sa.UUID(), nullable=True),
    sa.Column('override_price', sa.Float(), nullable=False),
    sa.Column('effective_from', sa.DateTime(timezone=True), nullable=False),
    sa.Column('effective_to', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['aircraft_id'], ['aircraft.id'], ),
    sa.ForeignKeyConstraint(['price_book_id'], ['price_books.id'], ),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quotes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('token', sa.String(length=100), nullable=False),
    sa.Column('listing_id', sa.UUID(), nullable=False),
    sa.Column('customer_id', sa.UUID(), nullable=True),
    sa.Column('passengers', sa.Integer(), nullable=False),
    sa.Column('departure_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('return_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('base_price', sa.Float(), nullable=False),
    sa.Column('service_fee', sa.Float(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'EXPIRED', 'CONVERTED', 'ABANDONED', name='quotestatus'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('viewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('lead_id', sa.String(length=100), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['listing_id'], ['listings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_quotes_status_expires', 'quotes', ['status', 'expires_at'], unique=False)
    op.create_index('idx_quotes_token_status', 'quotes', ['token', 'status'], unique=False)
    op.create_index(op.f('ix_quotes_token'), 'quotes', ['token'], unique=True)
    op.create_table('holds',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('quote_id', sa.UUID(), nullable=False),
    sa.Column('deposit_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'EXPIRED', 'CONVERTED', 'CANCELLED', name='holdstatus'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deposit_paid', sa.Boolean(), nullable=False),
    sa.Column('deposit_paid_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['quote_id'], ['quotes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_holds_status_expires', 'holds', ['status', 'expires_at'], unique=False)
    op.create_table('bookings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('quote_id', sa.UUID(), nullable=False),
    sa.Column('operator_id', sa.UUID(), nullable=False),
    sa.Column('customer_id', sa.UUID(), nullable=True),
    sa.Column('hold_id', sa.UUID(), nullable=True),
    sa.Column('booking_number', sa.String(length=100), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'PAID', 'CANCELLED', 'COMPLETED', name='bookingstatus'), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('paid_amount', sa.Float(), nullable=False),
    sa.Column('departure_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('return_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('payment_due', sa.DateTime(timezone=True), nullable=True),
    sa.Column('fully_paid_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('internal_notes', sa.Text(), nullable=True),
    sa.Column('booking_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['hold_id'], ['holds.id'], ),
    sa.ForeignKeyConstraint(['operator_id'], ['operators.id'], ),
    sa.ForeignKeyConstraint(['quote_id'], ['quotes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_bookings_number', 'bookings', ['booking_number'], unique=False)
    op.create_index('idx_bookings_status_date', 'bookings', ['status', 'departure_date'], unique=False)
    op.create_index(op.f('ix_bookings_booking_number'), 'bookings', ['booking_number'], unique=True)
    op.create_table('event_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('event', sa.String(length=100), nullable=False),
    sa.Column('entity', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=False),
    sa.Column('quote_id', sa.UUID(), nullable=True),
    sa.Column('booking_id', sa.UUID(), nullable=True),
    sa.Column('customer_id', sa.UUID(), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('session_id', sa.String(length=100), nullable=True),
    sa.Column('client_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
    sa.ForeignKeyConstraint(['quote_id'], ['quotes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_events_date', 'event_logs', ['created_at'], unique=False)
    op.create_index('idx_events_entity', 'event_logs', ['entity', 'entity_id'], unique=False)
    op.create_index(op.f('ix_event_logs_event'), 'event_logs', ['event'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('booking_id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.Enum('WOMPI', 'YAPPY', 'MANUAL', name='paymentprovider'), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'PAID', 'FAILED', 'EXPIRED', 'CANCELLED', 'REFUNDED', name='paymentstatus'), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('payment_link_url', sa.String(length=1000), nullable=True),
    sa.Column('webhook_payload', sa.JSON(), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('failure_reason', sa.String(length=500), nullable=True),
    sa.Column('paid_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expired_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_payments_external_id', 'payments', ['external_id'], unique=False)
    op.create_index('idx_payments_status_date', 'payments', ['status', 'created_at'], unique=False)
    op.create_index(op.f('ix_payments_external_id'), 'payments', ['external_id'], unique=False)
    op.create_table('webhook_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('payment_id', sa.UUID(), nullable=True),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('external_event_id', sa.String(length=255), nullable=True),
    sa.Column('payload', sa.JSON(), nullable=False),
    sa.Column('signature', sa.String(length=500), nullable=False),
    sa.Column('processed', sa.Boolean(), nullable=False),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('received_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('external_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_webhooks_event_type', 'webhook_events', ['event_type'], unique=False)
    op.create_index('idx_webhooks_processed_date', 'webhook_events', ['processed', 'received_at'], unique=False)
    op.create_index(op.f('ix_webhook_events_event_type'), 'webhook_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_webhook_events_external_event_id'), 'webhook_events', ['external_event_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_webhook_events_external_event_id'), table_name='webhook_events')
    op.drop_index(op.f('ix_webhook_events_event_type'), table_name='webhook_events')
    op.drop_index('idx_webhooks_processed_date', table_name='webhook_events')
    op.drop_index('idx_webhooks_event_type', table_name='webhook_events')
    op.drop_table('webhook_events')
    op.drop_index(op.f('ix_payments_external_id'), table_name='payments')
    op.drop_index('idx_payments_status_date', table_name='payments')
    op.drop_index('idx_payments_external_id', table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_event_logs_event'), table_name='event_logs')
    op.drop_index('idx_events_entity', table_name='event_logs')
    op.drop_index('idx_events_date', table_name='event_logs')
    op.drop_table('event_logs')
    op.drop_index(op.f('ix_bookings_booking_number'), table_name='bookings')
    op.drop_index('idx_bookings_status_date', table_name='bookings')
    op.drop_index('idx_bookings_number', table_name='bookings')
    op.drop_table('bookings')
    op.drop_index('idx_holds_status_expires', table_name='holds')
    op.drop_table('holds')
    op.drop_index(op.f('ix_quotes_token'), table_name='quotes')
    op.drop_index('idx_quotes_token_status', table_name='quotes')
    op.drop_index('idx_quotes_status_expires', table_name='quotes')
    op.drop_table('quotes')
    op.drop_table('price_overrides')
    op.drop_index('idx_listings_status_type', table_name='listings')
    op.drop_index('idx_listings_featured_boosted', table_name='listings')
    op.drop_table('listings')
    op.drop_index('idx_busy_blocks_external_id', table_name='busy_blocks')
    op.drop_index('idx_busy_blocks_aircraft_time', table_name='busy_blocks')
    op.drop_table('busy_blocks')
    op.drop_index('idx_slots_status_source', table_name='availability_slots')
    op.drop_index('idx_slots_aircraft_time', table_name='availability_slots')
    op.drop_table('availability_slots')
    op.drop_table('surcharges')
    op.drop_index(op.f('ix_message_logs_message_id'), table_name='message_logs')
    op.drop_index('idx_messages_status_date', table_name='message_logs')
    op.drop_index('idx_messages_channel_direction', table_name='message_logs')
    op.drop_table('message_logs')
    op.drop_index(op.f('ix_aircraft_registration'), table_name='aircraft')
    op.drop_index('idx_aircraft_operator_active', table_name='aircraft')
    op.drop_table('aircraft')
    op.drop_index(op.f('ix_routes_origin'), table_name='routes')
    op.drop_index(op.f('ix_routes_destination'), table_name='routes')
    op.drop_index('idx_routes_origin_destination', table_name='routes')
    op.drop_table('routes')
    op.drop_table('price_books')
    op.drop_index(op.f('ix_policies_type'), table_name='policies')
    op.drop_index('idx_policies_type_active', table_name='policies')
    op.drop_table('policies')
    op.drop_index(op.f('ix_operators_code'), table_name='operators')
    op.drop_index('idx_operators_active_code', table_name='operators')
    op.drop_table('operators')
    op.drop_index(op.f('ix_customers_email'), table_name='customers')
    op.drop_table('customers')
    # ### end Alembic commands ###
